music_directory		    "~/comomusic"
playlist_directory		"~/.config/mpd/playlists"
db_file			          "~/.config/mpd/database"

#log_file			"~/.config/mpd/log"
#pid_file			"~/.config/mpd/pid"

state_file			"~/.config/mpd/state"
#sticker_file			"~/.config/mpd/sticker.sql"

#user				"comodino"
#group				"nogroup"

# For network
#bind_to_address		"any"

# And for Unix Socket
bind_to_address		"~/.config/mpd/socket"
#port				"6600"

log_level			"notice"

restore_paused "no"

#save_absolute_paths_in_playlists	"no"

metadata_to_use	"artist,album,title,track,name,genre,date,composer,performer,disc"

# This example just enables the "comment" tag without disabling all
# the other supported tags:
#metadata_to_use "+comment"

auto_update	"yes"

# Limit the depth of the directories being watched, 0 means only watch
# the music directory itself.  There is no limit by default.
#
#auto_update_depth "3"


follow_outside_symlinks	"yes"
follow_inside_symlinks		"yes"


#zeroconf_enabled		"yes"

# The argument to this setting will be the Zeroconf / Avahi unique name for
# this MPD server on the network. %h will be replaced with the hostname.
#
#zeroconf_name			"Music Player @ %h"

#password                        "password@read,add,control,admin"
#default_permissions             "read,add,control,admin"

#database {
#       plugin "simple"
#       path "~/.local/share/mpd/db"
#       cache_directory "~/.local/share/mpd/cache"
#}

input {
        plugin "curl"
#       proxy "proxy.isp.com:8080"
#       proxy_user "user"
#       proxy_password "password"
}

# pipewire ALSA output
# (* can't manipulate volume *)
# ((* possily bug *))
# audio_output {
#     type            "alsa"
#     name            "PipeWire ALSA Output"
#     device          "pipewire"
#     mixer_type      "hardware"
# }

# software mixer for more control
audio_output {
    type            "alsa"
    name            "Pipewire Software Mixer"
    device          "pipewire"
    mixer_type      "software"
}

# Visualizer
audio_output {
  type            "fifo"
  name            "visualizer"
  path            "/tmp/mpd.fifo"
  format          "44100:16:2"
  buffer_time     "80000"
}

# An example of an OSS output:
#audio_output {
#	type		"oss"
#	name		"My OSS Device"
##	device		"/dev/dsp"	# optional
##	mixer_type      "hardware"	# optional
##	mixer_device	"/dev/mixer"	# optional
##	mixer_control	"PCM"		# optional
#}

# An example of a recorder output:
#audio_output {
#	type		"recorder"
#	name		"My recorder"
#	encoder		"vorbis"		# optional, vorbis or lame
#	path		"/var/lib/mpd/recorder/mpd.ogg"
##	quality		"5.0"			# do not define if bitrate is defined
#	bitrate		"128"			# do not define if quality is defined
#	format		"44100:16:1"
#}

# An example of a httpd output (built-in HTTP streaming server):
#audio_output {
#	type		"httpd"
#	name		"My HTTP Stream"
#	encoder		"vorbis"		# optional, vorbis or lame
#	port		"8000"
#	bind_to_address	"0.0.0.0"		# optional, IPv4 or IPv6
##	quality		"5.0"			# do not define if bitrate is defined
#	bitrate		"128"			# do not define if quality is defined
#	format		"44100:16:1"
#	max_clients	"0"			# optional 0=no limit
#}

# An example of a pulseaudio output (streaming to a remote pulseaudio server)
#audio_output {
#	type		"pulse"
#	name		"My Pulse Output"
##	server		"remote_server"		# optional
##	sink		"remote_server_sink"	# optional
##	media_role	"media_role"		#optional
#}

# An example of an openal output.
#audio_output {
#	type		"openal"
#	name		"My OpenAL output"
##	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#}

# An example of an sndio output.
#audio_output {
#	type		"sndio"
#	name		"sndio output"
#	mixer_type	"hardware"
#}

## Example "pipe" output:
#audio_output {
#	type		"pipe"
#	name		"my pipe"
#	command		"aplay -f cd 2>/dev/null"
## Or if you're want to use AudioCompress
#	command		"AudioCompress -m | aplay -f cd 2>/dev/null"
## Or to send raw PCM stream through PCM:
#	command		"nc example.org 8765"
#	format		"44100:16:2"
#}

# null output
#audio_output {
#	type          "null"
#	name          "null output"
#	mixer_type    "none"
#}


# This setting specifies the type of ReplayGain to use. This setting can have
# the argument "off", "album", "track" or "auto". "auto" is a special mode that
# chooses between "track" and "album" depending on the current state of
# random playback. If random playback is enabled then "track" mode is used.
# See <https://wiki.hydrogenaud.io/index.php?title=Replaygain> for
# more details about ReplayGain.
# This setting is off by default.
#
#replaygain			"album"

# This setting sets the pre-amp used for files that have ReplayGain tags. By
# default this setting is disabled.
#
#replaygain_preamp		"0"

# This setting sets the pre-amp used for files that do NOT have ReplayGain tags.
# By default this setting is disabled.
#
#replaygain_missing_preamp	"0"

# This setting enables or disables ReplayGain limiting.
# MPD calculates actual amplification based on the ReplayGain tags
# and replaygain_preamp / replaygain_missing_preamp setting.
# If replaygain_limit is enabled MPD will never amplify audio signal
# above its original level. If replaygain_limit is disabled such amplification
# might occur. By default this setting is enabled.
#
#replaygain_limit		"yes"

# This setting enables on-the-fly normalization volume adjustment. This will
# result in the volume of all playing audio to be adjusted so the output has
# equal "loudness". This setting is disabled by default.
#
#volume_normalization		"no"


#filesystem_charset		"UTF-8"
